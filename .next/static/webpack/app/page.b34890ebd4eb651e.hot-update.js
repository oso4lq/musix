/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx":
/*!************************************************************!*\
  !*** ./src/components/ContentPlaylist/ContentPlaylist.tsx ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import React from \"react\";\n// import styles from \"./ContentPlaylist.module.css\";\n// import classNames from \"classnames\";\n// import { PlayListItem } from \"@components/PlayListItem\";\n// import { useTracks } from \"@/hooks/useTracks\";\n// import { Track } from \"@/interfaces/interfaces\";\n// const ContentPlaylist: React.FC = () => {\n//   const { tracks } = useTracks();\n//   console.log(tracks);\n//   if (!Array.isArray(tracks)) {\n//     return (\n//       <p>Loading tracks...</p>\n//     )\n//   }\n//   return (\n//     <div className={classNames(styles.contentPlaylist, styles.playlist)}>\n//       {tracks.map((track: Track) => (\n//         <PlayListItem\n//           key={track.id}\n//           id={track.id}\n//           album={track.album}\n//           duration={track.duration_in_seconds}\n//           genre={track.genre}\n//           logo={track.logo}\n//           name={track.name}\n//           author={track.author}\n//           date={track.release_date}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n// export default ContentPlaylist;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NvbnRlbnRQbGF5bGlzdC9Db250ZW50UGxheWxpc3QudHN4IiwibWFwcGluZ3MiOiJBQUFBLDZCQUE2QjtBQUM3QixxREFBcUQ7QUFDckQsdUNBQXVDO0FBQ3ZDLDJEQUEyRDtBQUMzRCxpREFBaUQ7QUFDakQsbURBQW1EO0FBRW5ELDRDQUE0QztBQUU1QyxvQ0FBb0M7QUFFcEMseUJBQXlCO0FBRXpCLGtDQUFrQztBQUNsQyxlQUFlO0FBQ2YsaUNBQWlDO0FBQ2pDLFFBQVE7QUFDUixNQUFNO0FBRU4sYUFBYTtBQUNiLDRFQUE0RTtBQUM1RSx3Q0FBd0M7QUFFeEMsd0JBQXdCO0FBQ3hCLDJCQUEyQjtBQUMzQiwwQkFBMEI7QUFDMUIsZ0NBQWdDO0FBQ2hDLGlEQUFpRDtBQUNqRCxnQ0FBZ0M7QUFDaEMsOEJBQThCO0FBQzlCLDhCQUE4QjtBQUM5QixrQ0FBa0M7QUFDbEMsc0NBQXNDO0FBQ3RDLGFBQWE7QUFFYixZQUFZO0FBQ1osYUFBYTtBQUNiLE9BQU87QUFDUCxLQUFLO0FBRUwsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NvbnRlbnRQbGF5bGlzdC9Db250ZW50UGxheWxpc3QudHN4PzNjZmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuLy8gaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9Db250ZW50UGxheWxpc3QubW9kdWxlLmNzc1wiO1xuLy8gaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIjtcbi8vIGltcG9ydCB7IFBsYXlMaXN0SXRlbSB9IGZyb20gXCJAY29tcG9uZW50cy9QbGF5TGlzdEl0ZW1cIjtcbi8vIGltcG9ydCB7IHVzZVRyYWNrcyB9IGZyb20gXCJAL2hvb2tzL3VzZVRyYWNrc1wiO1xuLy8gaW1wb3J0IHsgVHJhY2sgfSBmcm9tIFwiQC9pbnRlcmZhY2VzL2ludGVyZmFjZXNcIjtcblxuLy8gY29uc3QgQ29udGVudFBsYXlsaXN0OiBSZWFjdC5GQyA9ICgpID0+IHtcblxuLy8gICBjb25zdCB7IHRyYWNrcyB9ID0gdXNlVHJhY2tzKCk7XG5cbi8vICAgY29uc29sZS5sb2codHJhY2tzKTtcblxuLy8gICBpZiAoIUFycmF5LmlzQXJyYXkodHJhY2tzKSkge1xuLy8gICAgIHJldHVybiAoXG4vLyAgICAgICA8cD5Mb2FkaW5nIHRyYWNrcy4uLjwvcD5cbi8vICAgICApXG4vLyAgIH1cblxuLy8gICByZXR1cm4gKFxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHN0eWxlcy5jb250ZW50UGxheWxpc3QsIHN0eWxlcy5wbGF5bGlzdCl9PlxuLy8gICAgICAge3RyYWNrcy5tYXAoKHRyYWNrOiBUcmFjaykgPT4gKFxuXG4vLyAgICAgICAgIDxQbGF5TGlzdEl0ZW1cbi8vICAgICAgICAgICBrZXk9e3RyYWNrLmlkfVxuLy8gICAgICAgICAgIGlkPXt0cmFjay5pZH1cbi8vICAgICAgICAgICBhbGJ1bT17dHJhY2suYWxidW19XG4vLyAgICAgICAgICAgZHVyYXRpb249e3RyYWNrLmR1cmF0aW9uX2luX3NlY29uZHN9XG4vLyAgICAgICAgICAgZ2VucmU9e3RyYWNrLmdlbnJlfVxuLy8gICAgICAgICAgIGxvZ289e3RyYWNrLmxvZ299XG4vLyAgICAgICAgICAgbmFtZT17dHJhY2submFtZX1cbi8vICAgICAgICAgICBhdXRob3I9e3RyYWNrLmF1dGhvcn1cbi8vICAgICAgICAgICBkYXRlPXt0cmFjay5yZWxlYXNlX2RhdGV9XG4vLyAgICAgICAgIC8+XG5cbi8vICAgICAgICkpfVxuLy8gICAgIDwvZGl2PlxuLy8gICApO1xuLy8gfTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgQ29udGVudFBsYXlsaXN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ContentPlaylist/index.tsx":
/*!**************************************************!*\
  !*** ./src/components/ContentPlaylist/index.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ContentPlaylist: function() { return /* reexport default from dynamic */ _ContentPlaylist__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _ContentPlaylist__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ContentPlaylist */ \"(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx\");\n/* harmony import */ var _ContentPlaylist__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ContentPlaylist__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NvbnRlbnRQbGF5bGlzdC9pbmRleC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0NvbnRlbnRQbGF5bGlzdC9pbmRleC50c3g/ODQ4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIENvbnRlbnRQbGF5bGlzdCB9IGZyb20gXCIuL0NvbnRlbnRQbGF5bGlzdFwiIl0sIm5hbWVzIjpbImRlZmF1bHQiLCJDb250ZW50UGxheWxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ContentPlaylist/index.tsx\n"));

/***/ })

});