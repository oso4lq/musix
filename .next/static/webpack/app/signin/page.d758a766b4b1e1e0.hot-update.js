"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/signin/page",{

/***/ "(app-pages-browser)/./src/api.tsx":
/*!*********************!*\
  !*** ./src/api.tsx ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTracks: function() { return /* binding */ getTracks; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   register: function() { return /* binding */ register; }\n/* harmony export */ });\n/* harmony import */ var _store_features_authSlice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store/features/authSlice */ \"(app-pages-browser)/./src/store/features/authSlice.ts\");\n\nconst API_URL = \"https://skypro-music-api.skyeng.tech/catalog/\";\nconst TRACK_ALL = \"track/all/\";\nconst SELECTION = \"selection/\";\nconst API_URL_USER = \"https://skypro-music-api.skyeng.tech/user/\";\nconst LOGIN = \"login/\";\nconst SIGNUP = \"signup/\";\nconst TOKEN = \"token/\";\nconst TOKEN_REFRESH = \"token/refresh/\";\nasync function getTracks(playlistNumber) {\n    try {\n        const response = await fetch(API_URL + (playlistNumber ? SELECTION + playlistNumber : TRACK_ALL));\n        if (!response.ok) {\n            if (response.status === 401) {\n                throw new Error(\"No authorization\");\n            } else {\n                throw new Error(\"HTTP error! Status: \".concat(response.status));\n            }\n        }\n        const data = await response.json();\n        (0,_store_features_authSlice__WEBPACK_IMPORTED_MODULE_0__.setAuthState)(true);\n        return data;\n    } catch (error) {\n        console.warn(error);\n        throw error;\n    }\n}\nasync function login(param) {\n    let { email, password } = param;\n    return fetch(API_URL_USER + LOGIN, {\n        method: \"POST\",\n        body: JSON.stringify({\n            email,\n            password\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Incorrect email or password.\");\n        }\n        if (response.status === 401) {\n            throw new Error(\"Username not found.\");\n        }\n        if (response.status === 500) {\n            throw new Error(\"Internal server error.\");\n        }\n        return response.json();\n    });\n}\nasync function register(param) {\n    let { username, email, password } = param;\n    return fetch(API_URL_USER + SIGNUP, {\n        method: \"POST\",\n        body: JSON.stringify({\n            email,\n            password,\n            username\n        }),\n        headers: {\n            \"content-type\": \"application/json\"\n        }\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"This username is already taken\");\n        }\n        return response.json();\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGkudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEQ7QUFFMUQsTUFBTUMsVUFBVTtBQUNoQixNQUFNQyxZQUFZO0FBQ2xCLE1BQU1DLFlBQVk7QUFDbEIsTUFBTUMsZUFBZTtBQUNyQixNQUFNQyxRQUFRO0FBQ2QsTUFBTUMsU0FBUztBQUNmLE1BQU1DLFFBQVE7QUFDZCxNQUFNQyxnQkFBZ0I7QUFFZixlQUFlQyxVQUFVQyxjQUE2QjtJQUN6RCxJQUFJO1FBQ0EsTUFBTUMsV0FBVyxNQUFNQyxNQUFNWCxVQUFXUyxDQUFBQSxpQkFBaUJQLFlBQVlPLGlCQUFpQlIsU0FBUTtRQUM5RixJQUFJLENBQUNTLFNBQVNFLEVBQUUsRUFBRTtZQUNkLElBQUlGLFNBQVNHLE1BQU0sS0FBSyxLQUFLO2dCQUN6QixNQUFNLElBQUlDLE1BQU07WUFDcEIsT0FBTztnQkFDSCxNQUFNLElBQUlBLE1BQU0sdUJBQXVDLE9BQWhCSixTQUFTRyxNQUFNO1lBQzFEO1FBQ0o7UUFDQSxNQUFNRSxPQUFPLE1BQU1MLFNBQVNNLElBQUk7UUFDaENqQix1RUFBWUEsQ0FBQztRQUNiLE9BQU9nQjtJQUNYLEVBQUUsT0FBT0UsT0FBTztRQUNaQyxRQUFRQyxJQUFJLENBQUNGO1FBQ2IsTUFBTUE7SUFDVjtBQUNKO0FBTU8sZUFBZUcsTUFBTSxLQUErQjtRQUEvQixFQUFFQyxLQUFLLEVBQUVDLFFBQVEsRUFBYyxHQUEvQjtJQUN4QixPQUFPWCxNQUFNUixlQUFlQyxPQUFPO1FBQy9CbUIsUUFBUTtRQUNSQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7WUFDakJMO1lBQ0FDO1FBQ0o7UUFDQUssU0FBUztZQUNMLGdCQUFnQjtRQUNwQjtJQUNKLEdBQUdDLElBQUksQ0FBQyxDQUFDbEI7UUFDTCxJQUFJQSxTQUFTRyxNQUFNLEtBQUssS0FBSztZQUN6QixNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxJQUFJSixTQUFTRyxNQUFNLEtBQUssS0FBSztZQUN6QixNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxJQUFJSixTQUFTRyxNQUFNLEtBQUssS0FBSztZQUN6QixNQUFNLElBQUlDLE1BQU07UUFDcEI7UUFDQSxPQUFPSixTQUFTTSxJQUFJO0lBQ3hCO0FBQ0o7QUFPTyxlQUFlYSxTQUFTLEtBQTRDO1FBQTVDLEVBQUVDLFFBQVEsRUFBRVQsS0FBSyxFQUFFQyxRQUFRLEVBQWlCLEdBQTVDO0lBQzNCLE9BQU9YLE1BQU1SLGVBQWVFLFFBQVE7UUFDaENrQixRQUFRO1FBQ1JDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztZQUNqQkw7WUFDQUM7WUFDQVE7UUFDSjtRQUNBSCxTQUFTO1lBQ0wsZ0JBQWdCO1FBQ3BCO0lBQ0osR0FBR0MsSUFBSSxDQUFDLENBQUNsQjtRQUNMLElBQUlBLFNBQVNHLE1BQU0sS0FBSyxLQUFLO1lBQ3pCLE1BQU0sSUFBSUMsTUFBTTtRQUNwQjtRQUNBLE9BQU9KLFNBQVNNLElBQUk7SUFDeEI7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvYXBpLnRzeD9iZGMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNldEF1dGhTdGF0ZSB9IGZyb20gXCIuL3N0b3JlL2ZlYXR1cmVzL2F1dGhTbGljZVwiO1xyXG5cclxuY29uc3QgQVBJX1VSTCA9IFwiaHR0cHM6Ly9za3lwcm8tbXVzaWMtYXBpLnNreWVuZy50ZWNoL2NhdGFsb2cvXCI7XHJcbmNvbnN0IFRSQUNLX0FMTCA9IFwidHJhY2svYWxsL1wiO1xyXG5jb25zdCBTRUxFQ1RJT04gPSBcInNlbGVjdGlvbi9cIjtcclxuY29uc3QgQVBJX1VSTF9VU0VSID0gXCJodHRwczovL3NreXByby1tdXNpYy1hcGkuc2t5ZW5nLnRlY2gvdXNlci9cIjtcclxuY29uc3QgTE9HSU4gPSBcImxvZ2luL1wiO1xyXG5jb25zdCBTSUdOVVAgPSBcInNpZ251cC9cIjtcclxuY29uc3QgVE9LRU4gPSBcInRva2VuL1wiO1xyXG5jb25zdCBUT0tFTl9SRUZSRVNIID0gXCJ0b2tlbi9yZWZyZXNoL1wiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRyYWNrcyhwbGF5bGlzdE51bWJlcjogbnVtYmVyIHwgbnVsbCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEFQSV9VUkwgKyAocGxheWxpc3ROdW1iZXIgPyBTRUxFQ1RJT04gKyBwbGF5bGlzdE51bWJlciA6IFRSQUNLX0FMTCkpO1xyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBhdXRob3JpemF0aW9uXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBTdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgc2V0QXV0aFN0YXRlKHRydWUpO1xyXG4gICAgICAgIHJldHVybiBkYXRhO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLndhcm4oZXJyb3IpO1xyXG4gICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG59XHJcblxyXG50eXBlIGxvZ2luUHJvcHMgPSB7XHJcbiAgICBlbWFpbDogc3RyaW5nO1xyXG4gICAgcGFzc3dvcmQ6IHN0cmluZztcclxufVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9naW4oeyBlbWFpbCwgcGFzc3dvcmQgfTogbG9naW5Qcm9wcykge1xyXG4gICAgcmV0dXJuIGZldGNoKEFQSV9VUkxfVVNFUiArIExPR0lOLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICBwYXNzd29yZCxcclxuICAgICAgICB9KSxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgIH0sXHJcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbmNvcnJlY3QgZW1haWwgb3IgcGFzc3dvcmQuXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVXNlcm5hbWUgbm90IGZvdW5kLlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNTAwKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludGVybmFsIHNlcnZlciBlcnJvci5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxudHlwZSByZWdpc3RlclByb3BzID0ge1xyXG4gICAgdXNlcm5hbWU6IHN0cmluZ1xyXG4gICAgZW1haWw6IHN0cmluZztcclxuICAgIHBhc3N3b3JkOiBzdHJpbmc7XHJcbn1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKHsgdXNlcm5hbWUsIGVtYWlsLCBwYXNzd29yZCB9OiByZWdpc3RlclByb3BzKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goQVBJX1VSTF9VU0VSICsgU0lHTlVQLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgICAgIGVtYWlsLFxyXG4gICAgICAgICAgICBwYXNzd29yZCxcclxuICAgICAgICAgICAgdXNlcm5hbWUsXHJcbiAgICAgICAgfSksXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICB9LFxyXG4gICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyB1c2VybmFtZSBpcyBhbHJlYWR5IHRha2VuXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSk7XHJcbn1cclxuIl0sIm5hbWVzIjpbInNldEF1dGhTdGF0ZSIsIkFQSV9VUkwiLCJUUkFDS19BTEwiLCJTRUxFQ1RJT04iLCJBUElfVVJMX1VTRVIiLCJMT0dJTiIsIlNJR05VUCIsIlRPS0VOIiwiVE9LRU5fUkVGUkVTSCIsImdldFRyYWNrcyIsInBsYXlsaXN0TnVtYmVyIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwic3RhdHVzIiwiRXJyb3IiLCJkYXRhIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJsb2dpbiIsImVtYWlsIiwicGFzc3dvcmQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImhlYWRlcnMiLCJ0aGVuIiwicmVnaXN0ZXIiLCJ1c2VybmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api.tsx\n"));

/***/ })

});