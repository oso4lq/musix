"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/signin/page",{

/***/ "(app-pages-browser)/./src/api.tsx":
/*!*********************!*\
  !*** ./src/api.tsx ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTracks: function() { return /* binding */ getTracks; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   register: function() { return /* binding */ register; }\n/* harmony export */ });\nconst API_URL = \"https://skypro-music-api.skyeng.tech/catalog/\";\nconst TRACK_ALL = \"track/all/\";\nconst SELECTION = \"selection/\";\nconst API_URL_USER = \"https://skypro-music-api.skyeng.tech/user/\";\nconst LOGIN = \"login/\";\nconst SIGNUP = \"signup/\";\nconst TOKEN = \"token/\";\nconst TOKEN_REFRESH = \"token/refresh/\";\nasync function getTracks(playlistNumber) {\n    try {\n        const response = await fetch(API_URL + (playlistNumber ? SELECTION + playlistNumber : TRACK_ALL));\n        if (!response.ok) {\n            if (response.status === 401) {\n                throw new Error(\"No authorization\");\n            } else {\n                throw new Error(\"HTTP error! Status: \".concat(response.status));\n            }\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.warn(error);\n        throw error;\n    }\n}\nasync function login(param) {\n    let { login, password } = param;\n    try {\n        const response = await fetch(API_URL_USER + LOGIN, {\n            method: \"POST\",\n            body: JSON.stringify({\n                login,\n                password\n            })\n        });\n        if (!response.ok) {\n            if (response.status === 400) {\n                throw new Error(\"Incorrect login or password.\");\n            } else {\n                throw new Error(\"HTTP error! Status: \".concat(response.status));\n            }\n        }\n        return response.json();\n    } catch (error) {\n        console.warn(error);\n        throw error;\n    }\n}\nasync function register(param) {\n    let { login, name, password } = param;\n    return fetch(API_URL_USER + \"/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            login,\n            name,\n            password\n        })\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"This username is already taken\");\n        }\n        return response.json();\n    });\n} //  DRAFT. add authorisation\n // export async function addTrack({ X }) {\n //     try {\n //         const response = await fetch(API_URL`${id}/favorite/`, {\n //             method: \"POST\",\n //             body: JSON.stringify({\n //                 X,\n //             }),\n //         });\n //         if (!response.ok) {\n //             if (response.status === 400) {\n //                 throw new Error(\"Something went wrong\");\n //             } else {\n //                 throw new Error(`HTTP error! Status: ${response.status}`);\n //             }\n //         }\n //         return response.json();\n //     } catch (error) {\n //         alert(\"No internet connection. Try again later.\");\n //         console.warn(error);\n //         throw error;\n //     }\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGkudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLFVBQVU7QUFDaEIsTUFBTUMsWUFBWTtBQUNsQixNQUFNQyxZQUFZO0FBQ2xCLE1BQU1DLGVBQWU7QUFDckIsTUFBTUMsUUFBUTtBQUNkLE1BQU1DLFNBQVM7QUFDZixNQUFNQyxRQUFRO0FBQ2QsTUFBTUMsZ0JBQWdCO0FBRWYsZUFBZUMsVUFBVUMsY0FBNkI7SUFDekQsSUFBSTtRQUNBLE1BQU1DLFdBQVcsTUFBTUMsTUFBTVgsVUFBV1MsQ0FBQUEsaUJBQWlCUCxZQUFZTyxpQkFBaUJSLFNBQVE7UUFDOUYsSUFBSSxDQUFDUyxTQUFTRSxFQUFFLEVBQUU7WUFDZCxJQUFJRixTQUFTRyxNQUFNLEtBQUssS0FBSztnQkFDekIsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCLE9BQU87Z0JBQ0gsTUFBTSxJQUFJQSxNQUFNLHVCQUF1QyxPQUFoQkosU0FBU0csTUFBTTtZQUMxRDtRQUNKO1FBQ0EsTUFBTUUsT0FBTyxNQUFNTCxTQUFTTSxJQUFJO1FBQ2hDLE9BQU9EO0lBQ1gsRUFBRSxPQUFPRSxPQUFPO1FBQ1pDLFFBQVFDLElBQUksQ0FBQ0Y7UUFDYixNQUFNQTtJQUNWO0FBQ0o7QUFNTyxlQUFlRyxNQUFNLEtBQStCO1FBQS9CLEVBQUVBLEtBQUssRUFBRUMsUUFBUSxFQUFjLEdBQS9CO0lBQ3hCLElBQUk7UUFDQSxNQUFNWCxXQUFXLE1BQU1DLE1BQU1SLGVBQWVDLE9BQU87WUFDL0NrQixRQUFRO1lBQ1JDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDakJMO2dCQUNBQztZQUNKO1FBQ0o7UUFDQSxJQUFJLENBQUNYLFNBQVNFLEVBQUUsRUFBRTtZQUNkLElBQUlGLFNBQVNHLE1BQU0sS0FBSyxLQUFLO2dCQUN6QixNQUFNLElBQUlDLE1BQU07WUFDcEIsT0FBTztnQkFDSCxNQUFNLElBQUlBLE1BQU0sdUJBQXVDLE9BQWhCSixTQUFTRyxNQUFNO1lBQzFEO1FBQ0o7UUFDQSxPQUFPSCxTQUFTTSxJQUFJO0lBQ3hCLEVBQUUsT0FBT0MsT0FBTztRQUNaQyxRQUFRQyxJQUFJLENBQUNGO1FBQ2IsTUFBTUE7SUFDVjtBQUNKO0FBRU8sZUFBZVMsU0FBUyxLQUF5QjtRQUF6QixFQUFFTixLQUFLLEVBQUVPLElBQUksRUFBRU4sUUFBUSxFQUFFLEdBQXpCO0lBQzNCLE9BQU9WLE1BQU1SLGVBQWUsVUFBVTtRQUNsQ21CLFFBQVE7UUFDUkMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO1lBQ2pCTDtZQUNBTztZQUNBTjtRQUNKO0lBQ0osR0FBR08sSUFBSSxDQUFDLENBQUNsQjtRQUNMLElBQUlBLFNBQVNHLE1BQU0sS0FBSyxLQUFLO1lBQ3pCLE1BQU0sSUFBSUMsTUFBTTtRQUNwQjtRQUNBLE9BQU9KLFNBQVNNLElBQUk7SUFDeEI7QUFDSixFQUVBLDRCQUE0QjtDQUM1QiwwQ0FBMEM7Q0FDMUMsWUFBWTtDQUNaLG1FQUFtRTtDQUNuRSw4QkFBOEI7Q0FDOUIscUNBQXFDO0NBQ3JDLHFCQUFxQjtDQUNyQixrQkFBa0I7Q0FDbEIsY0FBYztDQUNkLDhCQUE4QjtDQUM5Qiw2Q0FBNkM7Q0FDN0MsMkRBQTJEO0NBQzNELHVCQUF1QjtDQUN2Qiw2RUFBNkU7Q0FDN0UsZ0JBQWdCO0NBQ2hCLFlBQVk7Q0FDWixrQ0FBa0M7Q0FDbEMsd0JBQXdCO0NBQ3hCLDZEQUE2RDtDQUM3RCwrQkFBK0I7Q0FDL0IsdUJBQXVCO0NBQ3ZCLFFBQVE7Q0FDUixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcGkudHN4P2JkYzAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQVBJX1VSTCA9IFwiaHR0cHM6Ly9za3lwcm8tbXVzaWMtYXBpLnNreWVuZy50ZWNoL2NhdGFsb2cvXCI7XHJcbmNvbnN0IFRSQUNLX0FMTCA9IFwidHJhY2svYWxsL1wiO1xyXG5jb25zdCBTRUxFQ1RJT04gPSBcInNlbGVjdGlvbi9cIjtcclxuY29uc3QgQVBJX1VSTF9VU0VSID0gXCJodHRwczovL3NreXByby1tdXNpYy1hcGkuc2t5ZW5nLnRlY2gvdXNlci9cIjtcclxuY29uc3QgTE9HSU4gPSBcImxvZ2luL1wiO1xyXG5jb25zdCBTSUdOVVAgPSBcInNpZ251cC9cIjtcclxuY29uc3QgVE9LRU4gPSBcInRva2VuL1wiO1xyXG5jb25zdCBUT0tFTl9SRUZSRVNIID0gXCJ0b2tlbi9yZWZyZXNoL1wiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRyYWNrcyhwbGF5bGlzdE51bWJlcjogbnVtYmVyIHwgbnVsbCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKEFQSV9VUkwgKyAocGxheWxpc3ROdW1iZXIgPyBTRUxFQ1RJT04gKyBwbGF5bGlzdE51bWJlciA6IFRSQUNLX0FMTCkpO1xyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBhdXRob3JpemF0aW9uXCIpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBTdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUud2FybihlcnJvcik7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbn1cclxuXHJcbnR5cGUgbG9naW5Qcm9wcyA9IHtcclxuICAgIGxvZ2luOiBzdHJpbmc7XHJcbiAgICBwYXNzd29yZDogc3RyaW5nO1xyXG59XHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2dpbih7IGxvZ2luLCBwYXNzd29yZCB9OiBsb2dpblByb3BzKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX1VSTF9VU0VSICsgTE9HSU4sIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgbG9naW4sXHJcbiAgICAgICAgICAgICAgICBwYXNzd29yZCxcclxuICAgICAgICAgICAgfSksXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkluY29ycmVjdCBsb2dpbiBvciBwYXNzd29yZC5cIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIFN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKGVycm9yKTtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyKHsgbG9naW4sIG5hbWUsIHBhc3N3b3JkIH0pIHtcclxuICAgIHJldHVybiBmZXRjaChBUElfVVJMX1VTRVIgKyAnL2xvZ2luJywge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICBsb2dpbixcclxuICAgICAgICAgICAgbmFtZSxcclxuICAgICAgICAgICAgcGFzc3dvcmQsXHJcbiAgICAgICAgfSksXHJcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGlzIHVzZXJuYW1lIGlzIGFscmVhZHkgdGFrZW5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLy8gIERSQUZULiBhZGQgYXV0aG9yaXNhdGlvblxyXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gYWRkVHJhY2soeyBYIH0pIHtcclxuLy8gICAgIHRyeSB7XHJcbi8vICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChBUElfVVJMYCR7aWR9L2Zhdm9yaXRlL2AsIHtcclxuLy8gICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuLy8gICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4vLyAgICAgICAgICAgICAgICAgWCxcclxuLy8gICAgICAgICAgICAgfSksXHJcbi8vICAgICAgICAgfSk7XHJcbi8vICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4vLyAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuLy8gICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNvbWV0aGluZyB3ZW50IHdyb25nXCIpO1xyXG4vLyAgICAgICAgICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBTdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG4vLyAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XHJcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgICAgIGFsZXJ0KFwiTm8gaW50ZXJuZXQgY29ubmVjdGlvbi4gVHJ5IGFnYWluIGxhdGVyLlwiKTtcclxuLy8gICAgICAgICBjb25zb2xlLndhcm4oZXJyb3IpO1xyXG4vLyAgICAgICAgIHRocm93IGVycm9yO1xyXG4vLyAgICAgfVxyXG4vLyB9XHJcbiJdLCJuYW1lcyI6WyJBUElfVVJMIiwiVFJBQ0tfQUxMIiwiU0VMRUNUSU9OIiwiQVBJX1VSTF9VU0VSIiwiTE9HSU4iLCJTSUdOVVAiLCJUT0tFTiIsIlRPS0VOX1JFRlJFU0giLCJnZXRUcmFja3MiLCJwbGF5bGlzdE51bWJlciIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsInN0YXR1cyIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJlcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwibG9naW4iLCJwYXNzd29yZCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicmVnaXN0ZXIiLCJuYW1lIiwidGhlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api.tsx\n"));

/***/ })

});