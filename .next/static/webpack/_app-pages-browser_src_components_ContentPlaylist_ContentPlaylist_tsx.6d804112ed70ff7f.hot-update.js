/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_ContentPlaylist_ContentPlaylist_tsx",{

/***/ "(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx":
/*!************************************************************!*\
  !*** ./src/components/ContentPlaylist/ContentPlaylist.tsx ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\"\n// import styles from \"./ContentPlaylist.module.css\";\n// import classNames from \"classnames\";\n// import React, { useEffect, useRef, useState } from \"react\";\n// import { trackType } from \"@/types/types\";\n// import { useAppDispatch, useAppSelector } from \"@/hooks\";\n// import { setCurrentTrack, setPlayList } from \"@/store/features/tracksSlice\";\n// import { getTracks } from \"@/api\";\n// import { PlayListItem } from \"@components/PlayListItem\";\n// const ContentPlaylist = () => {\n//   const dispatcher = useAppDispatch();\n//   const playList = useAppSelector((state) => state.tracks.playList);\n//   const searchPlayList = useAppSelector((state) => state.tracks.searchPlaylist);\n//   const { track } = useAppSelector((state) => state.tracks);\n//   const isSearch = useAppSelector((state) => state.tracks.isSearch);\n//   // active filters!!!\n//   // const activeFilters = useAppSelector((state) => state.filters.activeFilters);\n//   // get the tracklist from API\n//   useEffect(() => {\n//     getTracks().then((data) => {\n//       dispatcher(setPlayList(data));\n//     });\n//   }, [dispatcher]);\n//   // Redux tools: set the track playing\n//   const handleTrack = (trackR: trackType) => {\n//     dispatcher(setCurrentTrack(trackR));\n//   };\n//   // determine which tracklist to render, default or search\n//   const tracksToRender = isSearch ? searchPlayList : playList;\n//   // add a duration from audio props to each track\n//   const [trackDurations, setTrackDurations] = useState<{ [key: string]: number }>({});\n//   const audioRefs = useRef<{ [key: string]: HTMLAudioElement }>({});\n//   useEffect(() => {\n//     const durations: { [key: string]: number } = {};\n//     playList?.forEach((track: trackType) => {\n//       const audio = new Audio(track.track_file);\n//       audio.addEventListener('loadedmetadata', () => {\n//         durations[track.id] = audio.duration;\n//         setTrackDurations({ ...durations });\n//       });\n//       audioRefs.current[track.id] = audio;\n//     });\n//     return () => {\n//       Object.values(audioRefs.current).forEach((audio) => {\n//         audio.pause();\n//         audio.removeAttribute('src');\n//         audio.load();\n//       });\n//     };\n//   }, [playList]);\n//   return (\n//     <div className={classNames(styles.contentPlaylist, styles.playlist)}>\n//       {isSearch && searchPlayList.length === 0 ? (\n//         <p className={styles.playlistTitleCol}>No tracks found</p>\n//       ) : (\n//         tracksToRender.map((trackR: trackType) => (\n//           <PlayListItem\n//             key={trackR.id}\n//             name={trackR.name}\n//             author={trackR.author}\n//             album={trackR.album}\n//             duration={trackDurations[trackR.id]}\n//             setTrack={() => handleTrack(trackR)}\n//             isSetTrack={trackR.id === track?.id}\n//           />\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n// export default ContentPlaylist;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0NvbnRlbnRQbGF5bGlzdC9Db250ZW50UGxheWxpc3QudHN4IiwibWFwcGluZ3MiOiJBQUVBLGVBQWU7QUFFZixxREFBcUQ7QUFDckQsdUNBQXVDO0FBQ3ZDLDhEQUE4RDtBQUM5RCw2Q0FBNkM7QUFDN0MsNERBQTREO0FBQzVELCtFQUErRTtBQUMvRSxxQ0FBcUM7QUFDckMsMkRBQTJEO0FBRTNELGtDQUFrQztBQUVsQyx5Q0FBeUM7QUFDekMsdUVBQXVFO0FBQ3ZFLG1GQUFtRjtBQUNuRiwrREFBK0Q7QUFDL0QsdUVBQXVFO0FBRXZFLHlCQUF5QjtBQUN6QixxRkFBcUY7QUFFckYsa0NBQWtDO0FBQ2xDLHNCQUFzQjtBQUN0QixtQ0FBbUM7QUFDbkMsdUNBQXVDO0FBQ3ZDLFVBQVU7QUFDVixzQkFBc0I7QUFFdEIsMENBQTBDO0FBQzFDLGlEQUFpRDtBQUNqRCwyQ0FBMkM7QUFDM0MsT0FBTztBQUVQLDhEQUE4RDtBQUM5RCxpRUFBaUU7QUFFakUscURBQXFEO0FBQ3JELHlGQUF5RjtBQUN6Rix1RUFBdUU7QUFDdkUsc0JBQXNCO0FBQ3RCLHVEQUF1RDtBQUN2RCxnREFBZ0Q7QUFDaEQsbURBQW1EO0FBQ25ELHlEQUF5RDtBQUN6RCxnREFBZ0Q7QUFDaEQsK0NBQStDO0FBQy9DLFlBQVk7QUFDWiw2Q0FBNkM7QUFDN0MsVUFBVTtBQUNWLHFCQUFxQjtBQUNyQiw4REFBOEQ7QUFDOUQseUJBQXlCO0FBQ3pCLHdDQUF3QztBQUN4Qyx3QkFBd0I7QUFDeEIsWUFBWTtBQUNaLFNBQVM7QUFDVCxvQkFBb0I7QUFFcEIsYUFBYTtBQUNiLDRFQUE0RTtBQUM1RSxxREFBcUQ7QUFDckQscUVBQXFFO0FBQ3JFLGNBQWM7QUFDZCxzREFBc0Q7QUFDdEQsMEJBQTBCO0FBQzFCLDhCQUE4QjtBQUM5QixpQ0FBaUM7QUFDakMscUNBQXFDO0FBQ3JDLG1DQUFtQztBQUNuQyxtREFBbUQ7QUFDbkQsbURBQW1EO0FBQ25ELG1EQUFtRDtBQUNuRCxlQUFlO0FBQ2YsYUFBYTtBQUNiLFdBQVc7QUFDWCxhQUFhO0FBQ2IsT0FBTztBQUNQLEtBQUs7QUFFTCxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvQ29udGVudFBsYXlsaXN0L0NvbnRlbnRQbGF5bGlzdC50c3g/M2NmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLy8gXCJ1c2UgY2xpZW50XCJcblxuLy8gaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9Db250ZW50UGxheWxpc3QubW9kdWxlLmNzc1wiO1xuLy8gaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIjtcbi8vIGltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbi8vIGltcG9ydCB7IHRyYWNrVHlwZSB9IGZyb20gXCJAL3R5cGVzL3R5cGVzXCI7XG4vLyBpbXBvcnQgeyB1c2VBcHBEaXNwYXRjaCwgdXNlQXBwU2VsZWN0b3IgfSBmcm9tIFwiQC9ob29rc1wiO1xuLy8gaW1wb3J0IHsgc2V0Q3VycmVudFRyYWNrLCBzZXRQbGF5TGlzdCB9IGZyb20gXCJAL3N0b3JlL2ZlYXR1cmVzL3RyYWNrc1NsaWNlXCI7XG4vLyBpbXBvcnQgeyBnZXRUcmFja3MgfSBmcm9tIFwiQC9hcGlcIjtcbi8vIGltcG9ydCB7IFBsYXlMaXN0SXRlbSB9IGZyb20gXCJAY29tcG9uZW50cy9QbGF5TGlzdEl0ZW1cIjtcblxuLy8gY29uc3QgQ29udGVudFBsYXlsaXN0ID0gKCkgPT4ge1xuXG4vLyAgIGNvbnN0IGRpc3BhdGNoZXIgPSB1c2VBcHBEaXNwYXRjaCgpO1xuLy8gICBjb25zdCBwbGF5TGlzdCA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudHJhY2tzLnBsYXlMaXN0KTtcbi8vICAgY29uc3Qgc2VhcmNoUGxheUxpc3QgPSB1c2VBcHBTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLnRyYWNrcy5zZWFyY2hQbGF5bGlzdCk7XG4vLyAgIGNvbnN0IHsgdHJhY2sgfSA9IHVzZUFwcFNlbGVjdG9yKChzdGF0ZSkgPT4gc3RhdGUudHJhY2tzKTtcbi8vICAgY29uc3QgaXNTZWFyY2ggPSB1c2VBcHBTZWxlY3Rvcigoc3RhdGUpID0+IHN0YXRlLnRyYWNrcy5pc1NlYXJjaCk7XG4gIFxuLy8gICAvLyBhY3RpdmUgZmlsdGVycyEhIVxuLy8gICAvLyBjb25zdCBhY3RpdmVGaWx0ZXJzID0gdXNlQXBwU2VsZWN0b3IoKHN0YXRlKSA9PiBzdGF0ZS5maWx0ZXJzLmFjdGl2ZUZpbHRlcnMpO1xuICBcbi8vICAgLy8gZ2V0IHRoZSB0cmFja2xpc3QgZnJvbSBBUElcbi8vICAgdXNlRWZmZWN0KCgpID0+IHtcbi8vICAgICBnZXRUcmFja3MoKS50aGVuKChkYXRhKSA9PiB7XG4vLyAgICAgICBkaXNwYXRjaGVyKHNldFBsYXlMaXN0KGRhdGEpKTtcbi8vICAgICB9KTtcbi8vICAgfSwgW2Rpc3BhdGNoZXJdKTtcblxuLy8gICAvLyBSZWR1eCB0b29sczogc2V0IHRoZSB0cmFjayBwbGF5aW5nXG4vLyAgIGNvbnN0IGhhbmRsZVRyYWNrID0gKHRyYWNrUjogdHJhY2tUeXBlKSA9PiB7XG4vLyAgICAgZGlzcGF0Y2hlcihzZXRDdXJyZW50VHJhY2sodHJhY2tSKSk7XG4vLyAgIH07XG5cbi8vICAgLy8gZGV0ZXJtaW5lIHdoaWNoIHRyYWNrbGlzdCB0byByZW5kZXIsIGRlZmF1bHQgb3Igc2VhcmNoXG4vLyAgIGNvbnN0IHRyYWNrc1RvUmVuZGVyID0gaXNTZWFyY2ggPyBzZWFyY2hQbGF5TGlzdCA6IHBsYXlMaXN0O1xuXG4vLyAgIC8vIGFkZCBhIGR1cmF0aW9uIGZyb20gYXVkaW8gcHJvcHMgdG8gZWFjaCB0cmFja1xuLy8gICBjb25zdCBbdHJhY2tEdXJhdGlvbnMsIHNldFRyYWNrRHVyYXRpb25zXSA9IHVzZVN0YXRlPHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0+KHt9KTtcbi8vICAgY29uc3QgYXVkaW9SZWZzID0gdXNlUmVmPHsgW2tleTogc3RyaW5nXTogSFRNTEF1ZGlvRWxlbWVudCB9Pih7fSk7XG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XG4vLyAgICAgY29uc3QgZHVyYXRpb25zOiB7IFtrZXk6IHN0cmluZ106IG51bWJlciB9ID0ge307XG4vLyAgICAgcGxheUxpc3Q/LmZvckVhY2goKHRyYWNrOiB0cmFja1R5cGUpID0+IHtcbi8vICAgICAgIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKHRyYWNrLnRyYWNrX2ZpbGUpO1xuLy8gICAgICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcignbG9hZGVkbWV0YWRhdGEnLCAoKSA9PiB7XG4vLyAgICAgICAgIGR1cmF0aW9uc1t0cmFjay5pZF0gPSBhdWRpby5kdXJhdGlvbjtcbi8vICAgICAgICAgc2V0VHJhY2tEdXJhdGlvbnMoeyAuLi5kdXJhdGlvbnMgfSk7XG4vLyAgICAgICB9KTtcbi8vICAgICAgIGF1ZGlvUmVmcy5jdXJyZW50W3RyYWNrLmlkXSA9IGF1ZGlvO1xuLy8gICAgIH0pO1xuLy8gICAgIHJldHVybiAoKSA9PiB7XG4vLyAgICAgICBPYmplY3QudmFsdWVzKGF1ZGlvUmVmcy5jdXJyZW50KS5mb3JFYWNoKChhdWRpbykgPT4ge1xuLy8gICAgICAgICBhdWRpby5wYXVzZSgpO1xuLy8gICAgICAgICBhdWRpby5yZW1vdmVBdHRyaWJ1dGUoJ3NyYycpO1xuLy8gICAgICAgICBhdWRpby5sb2FkKCk7XG4vLyAgICAgICB9KTtcbi8vICAgICB9O1xuLy8gICB9LCBbcGxheUxpc3RdKTtcblxuLy8gICByZXR1cm4gKFxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVzKHN0eWxlcy5jb250ZW50UGxheWxpc3QsIHN0eWxlcy5wbGF5bGlzdCl9PlxuLy8gICAgICAge2lzU2VhcmNoICYmIHNlYXJjaFBsYXlMaXN0Lmxlbmd0aCA9PT0gMCA/IChcbi8vICAgICAgICAgPHAgY2xhc3NOYW1lPXtzdHlsZXMucGxheWxpc3RUaXRsZUNvbH0+Tm8gdHJhY2tzIGZvdW5kPC9wPlxuLy8gICAgICAgKSA6IChcbi8vICAgICAgICAgdHJhY2tzVG9SZW5kZXIubWFwKCh0cmFja1I6IHRyYWNrVHlwZSkgPT4gKFxuLy8gICAgICAgICAgIDxQbGF5TGlzdEl0ZW1cbi8vICAgICAgICAgICAgIGtleT17dHJhY2tSLmlkfVxuLy8gICAgICAgICAgICAgbmFtZT17dHJhY2tSLm5hbWV9XG4vLyAgICAgICAgICAgICBhdXRob3I9e3RyYWNrUi5hdXRob3J9XG4vLyAgICAgICAgICAgICBhbGJ1bT17dHJhY2tSLmFsYnVtfVxuLy8gICAgICAgICAgICAgZHVyYXRpb249e3RyYWNrRHVyYXRpb25zW3RyYWNrUi5pZF19XG4vLyAgICAgICAgICAgICBzZXRUcmFjaz17KCkgPT4gaGFuZGxlVHJhY2sodHJhY2tSKX1cbi8vICAgICAgICAgICAgIGlzU2V0VHJhY2s9e3RyYWNrUi5pZCA9PT0gdHJhY2s/LmlkfVxuLy8gICAgICAgICAgIC8+XG4vLyAgICAgICAgICkpXG4vLyAgICAgICApfVxuLy8gICAgIDwvZGl2PlxuLy8gICApO1xuLy8gfTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgQ29udGVudFBsYXlsaXN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ContentPlaylist/ContentPlaylist.tsx\n"));

/***/ })

});