"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_src_components_ContentPlaylist_ContentPlaylist_tsx",{

/***/ "(app-pages-browser)/./src/api.tsx":
/*!*********************!*\
  !*** ./src/api.tsx ***!
  \*********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTracks: function() { return /* binding */ getTracks; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   register: function() { return /* binding */ register; }\n/* harmony export */ });\nconst API_URL = \"https://skypro-music-api.skyeng.tech/catalog/\";\nconst TRACK_ALL = \"track/all/\";\nconst SELECTION = \"selection/\";\nasync function getTracks(playlistNumber) {\n    try {\n        const response = await fetch(API_URL + (playlistNumber ? SELECTION + playlistNumber : TRACK_ALL));\n        if (!response.ok) {\n            if (response.status === 401) {\n                throw new Error(\"No authorization\");\n            } else {\n                throw new Error(\"HTTP error! Status: \".concat(response.status));\n            }\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.warn(error);\n        throw error;\n    }\n}\nasync function login(param) {\n    let { login, password } = param;\n    return fetch(API_URL_USER + \"/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            login,\n            password\n        })\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"Incorrect login or password.\");\n        }\n        return response.json();\n    });\n}\nasync function register(param) {\n    let { login, name, password } = param;\n    return fetch(API_URL_USER + \"/login\", {\n        method: \"POST\",\n        body: JSON.stringify({\n            login,\n            name,\n            password\n        })\n    }).then((response)=>{\n        if (response.status === 400) {\n            throw new Error(\"This username is already taken\");\n        }\n        return response.json();\n    });\n} //  DRAFT. add authorisation\n // export async function addTrack({ X }) {\n //     try {\n //         const response = await fetch(API_URL`${id}/favorite/`, {\n //             method: \"POST\",\n //             body: JSON.stringify({\n //                 X,\n //             }),\n //         });\n //         if (!response.ok) {\n //             if (response.status === 400) {\n //                 throw new Error(\"Something went wrong\");\n //             } else {\n //                 throw new Error(`HTTP error! Status: ${response.status}`);\n //             }\n //         }\n //         return response.json();\n //     } catch (error) {\n //         alert(\"No internet connection. Try again later.\");\n //         console.warn(error);\n //         throw error;\n //     }\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGkudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU1BLFVBQVU7QUFDaEIsTUFBTUMsWUFBWTtBQUNsQixNQUFNQyxZQUFZO0FBRVgsZUFBZUMsVUFBVUMsY0FBNkI7SUFDekQsSUFBSTtRQUNBLE1BQU1DLFdBQVcsTUFBTUMsTUFBTU4sVUFBV0ksQ0FBQUEsaUJBQWlCRixZQUFZRSxpQkFBaUJILFNBQVE7UUFDOUYsSUFBSSxDQUFDSSxTQUFTRSxFQUFFLEVBQUU7WUFDZCxJQUFJRixTQUFTRyxNQUFNLEtBQUssS0FBSztnQkFDekIsTUFBTSxJQUFJQyxNQUFNO1lBQ3BCLE9BQU87Z0JBQ0gsTUFBTSxJQUFJQSxNQUFNLHVCQUF1QyxPQUFoQkosU0FBU0csTUFBTTtZQUMxRDtRQUNKO1FBQ0EsTUFBTUUsT0FBTyxNQUFNTCxTQUFTTSxJQUFJO1FBQ2hDLE9BQU9EO0lBQ1gsRUFBRSxPQUFPRSxPQUFPO1FBQ1pDLFFBQVFDLElBQUksQ0FBQ0Y7UUFDYixNQUFNQTtJQUNWO0FBQ0o7QUFFTyxlQUFlRyxNQUFNLEtBQW1CO1FBQW5CLEVBQUVBLEtBQUssRUFBRUMsUUFBUSxFQUFFLEdBQW5CO0lBQ3hCLE9BQU9WLE1BQU1XLGVBQWUsVUFBVTtRQUNsQ0MsUUFBUTtRQUNSQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7WUFDakJOO1lBQ0FDO1FBQ0o7SUFDSixHQUFHTSxJQUFJLENBQUMsQ0FBQ2pCO1FBQ0wsSUFBSUEsU0FBU0csTUFBTSxLQUFLLEtBQUs7WUFDekIsTUFBTSxJQUFJQyxNQUFNO1FBQ3BCO1FBQ0EsT0FBT0osU0FBU00sSUFBSTtJQUN4QjtBQUNKO0FBRU8sZUFBZVksU0FBUyxLQUF5QjtRQUF6QixFQUFFUixLQUFLLEVBQUVTLElBQUksRUFBRVIsUUFBUSxFQUFFLEdBQXpCO0lBQzNCLE9BQU9WLE1BQU1XLGVBQWUsVUFBVTtRQUNsQ0MsUUFBUTtRQUNSQyxNQUFNQyxLQUFLQyxTQUFTLENBQUM7WUFDakJOO1lBQ0FTO1lBQ0FSO1FBQ0o7SUFDSixHQUFHTSxJQUFJLENBQUMsQ0FBQ2pCO1FBQ0wsSUFBSUEsU0FBU0csTUFBTSxLQUFLLEtBQUs7WUFDekIsTUFBTSxJQUFJQyxNQUFNO1FBQ3BCO1FBQ0EsT0FBT0osU0FBU00sSUFBSTtJQUN4QjtBQUNKLEVBRUEsNEJBQTRCO0NBQzVCLDBDQUEwQztDQUMxQyxZQUFZO0NBQ1osbUVBQW1FO0NBQ25FLDhCQUE4QjtDQUM5QixxQ0FBcUM7Q0FDckMscUJBQXFCO0NBQ3JCLGtCQUFrQjtDQUNsQixjQUFjO0NBQ2QsOEJBQThCO0NBQzlCLDZDQUE2QztDQUM3QywyREFBMkQ7Q0FDM0QsdUJBQXVCO0NBQ3ZCLDZFQUE2RTtDQUM3RSxnQkFBZ0I7Q0FDaEIsWUFBWTtDQUNaLGtDQUFrQztDQUNsQyx3QkFBd0I7Q0FDeEIsNkRBQTZEO0NBQzdELCtCQUErQjtDQUMvQix1QkFBdUI7Q0FDdkIsUUFBUTtDQUNSLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwaS50c3g/YmRjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUElfVVJMID0gXCJodHRwczovL3NreXByby1tdXNpYy1hcGkuc2t5ZW5nLnRlY2gvY2F0YWxvZy9cIjtcclxuY29uc3QgVFJBQ0tfQUxMID0gXCJ0cmFjay9hbGwvXCI7XHJcbmNvbnN0IFNFTEVDVElPTiA9IFwic2VsZWN0aW9uL1wiXHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VHJhY2tzKHBsYXlsaXN0TnVtYmVyOiBudW1iZXIgfCBudWxsKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX1VSTCArIChwbGF5bGlzdE51bWJlciA/IFNFTEVDVElPTiArIHBsYXlsaXN0TnVtYmVyIDogVFJBQ0tfQUxMKSk7XHJcbiAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGF1dGhvcml6YXRpb25cIik7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhUVFAgZXJyb3IhIFN0YXR1czogJHtyZXNwb25zZS5zdGF0dXN9YCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKGVycm9yKTtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvZ2luKHsgbG9naW4sIHBhc3N3b3JkIH0pIHtcclxuICAgIHJldHVybiBmZXRjaChBUElfVVJMX1VTRVIgKyAnL2xvZ2luJywge1xyXG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICBsb2dpbixcclxuICAgICAgICAgICAgcGFzc3dvcmQsXHJcbiAgICAgICAgfSksXHJcbiAgICB9KS50aGVuKChyZXNwb25zZSkgPT4ge1xyXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDQwMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbmNvcnJlY3QgbG9naW4gb3IgcGFzc3dvcmQuXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWdpc3Rlcih7IGxvZ2luLCBuYW1lLCBwYXNzd29yZCB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goQVBJX1VSTF9VU0VSICsgJy9sb2dpbicsIHtcclxuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgbG9naW4sXHJcbiAgICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICAgIHBhc3N3b3JkLFxyXG4gICAgICAgIH0pLFxyXG4gICAgfSkudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDApIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVGhpcyB1c2VybmFtZSBpcyBhbHJlYWR5IHRha2VuXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8vICBEUkFGVC4gYWRkIGF1dGhvcmlzYXRpb25cclxuLy8gZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFkZFRyYWNrKHsgWCB9KSB7XHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goQVBJX1VSTGAke2lkfS9mYXZvcml0ZS9gLCB7XHJcbi8vICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbi8vICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuLy8gICAgICAgICAgICAgICAgIFgsXHJcbi8vICAgICAgICAgICAgIH0pLFxyXG4vLyAgICAgICAgIH0pO1xyXG4vLyAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuLy8gICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAwKSB7XHJcbi8vICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTb21ldGhpbmcgd2VudCB3cm9uZ1wiKTtcclxuLy8gICAgICAgICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSFRUUCBlcnJvciEgU3RhdHVzOiAke3Jlc3BvbnNlLnN0YXR1c31gKTtcclxuLy8gICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgIH1cclxuLy8gICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgICBhbGVydChcIk5vIGludGVybmV0IGNvbm5lY3Rpb24uIFRyeSBhZ2FpbiBsYXRlci5cIik7XHJcbi8vICAgICAgICAgY29uc29sZS53YXJuKGVycm9yKTtcclxuLy8gICAgICAgICB0aHJvdyBlcnJvcjtcclxuLy8gICAgIH1cclxuLy8gfVxyXG4iXSwibmFtZXMiOlsiQVBJX1VSTCIsIlRSQUNLX0FMTCIsIlNFTEVDVElPTiIsImdldFRyYWNrcyIsInBsYXlsaXN0TnVtYmVyIiwicmVzcG9uc2UiLCJmZXRjaCIsIm9rIiwic3RhdHVzIiwiRXJyb3IiLCJkYXRhIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJsb2dpbiIsInBhc3N3b3JkIiwiQVBJX1VSTF9VU0VSIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0aGVuIiwicmVnaXN0ZXIiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api.tsx\n"));

/***/ })

});